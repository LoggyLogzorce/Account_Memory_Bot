from aiogram import types
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from db import data_output
from shifr import decrypt_data

ReplyMarkup = types.ReplyKeyboardMarkup(
    keyboard=[
        [
            types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å"),
            types.KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å —Ç–∏—Ç—É–ª—å–Ω–∏–∫")
        ],
        [
            types.KeyboardButton(text="–í—Å–µ –º–æ–∏ –∑–∞–ø–∏—Å–∏"),
            types.KeyboardButton(text="–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π")
        ]
    ],
    one_time_keyboard=True,
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É"
)

deleteMarkup = types.ReplyKeyboardMarkup(
    keyboard=[
        [
            types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –æ–¥–Ω—É"),
            types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏")
        ],
        [
            types.KeyboardButton(text="–ù–∞–∑–∞–¥")
        ]
    ],
    one_time_keyboard=True,
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É"
)


def deleteInlineMarkup(cursor, username):
    row = data_output(cursor, username)
    data_from_db = decrypt_data(row)
    builder = InlineKeyboardBuilder()
    for i in range(len(data_from_db)):
        builder.add(types.InlineKeyboardButton(text=f'{data_from_db[i][2]}', callback_data=f'button {data_from_db[i][2]}'))
    builder.adjust(2)

    return builder.as_markup(resize_keyboard=True)


def updateMarkup():
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text=f'–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ üÜô', callback_data=f'updateData'))
    builder.adjust(1)

    return builder.as_markup(resize_keyboard=True)


def all_title_Markup(cursor, username):
    row = data_output(cursor, username)
    data_from_db = decrypt_data(row)

    builder = ReplyKeyboardBuilder()
    builder.row(types.KeyboardButton(text='–ù–∞–∑–∞–¥'))
    for i in range(len(data_from_db)):
        builder.add(types.KeyboardButton(text=f'{data_from_db[i][2]}'))
    builder.adjust(1, 2)

    return builder.as_markup(resize_keyboard=True)


def confirmation():
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(text=f'–î–∞ ‚úÖ', callback_data=f'confirmation_yes'))
    builder.add(types.InlineKeyboardButton(text=f'–ù–µ—Ç ‚ùå', callback_data=f'confirmation_no'))
    builder.adjust(2)

    return builder.as_markup(resize_keyboard=True)
